[tool.poetry]
name = "Flask-Media-Dl"
version = "0.0.0"
description = "An extension to download media from a url"
authors = ["Blondel MONDESIR <blondel@novaedht.org>"]
license = "GPL-3.0-or-later"
readme="README.md"
repository="https://github.com/deldesir/flask-media-dl"
keywords=["flask", "media", "youtube", "tiktok", "download"]
documentation="https://deldesir.github.io/flask-media-dl/"
exclude = ["docs", "tests*"]
classifiers=[
        "Development Status :: 3 - Alpha",
        "Intended Audience :: Developers",
        "License :: OSI Approved :: GNU Lesser General Public License v3 or later (LGPLv3+)",
        "Framework :: Flask",
        "Topic :: Software Development :: Build Tools",
        "Topic :: Software Development :: Libraries :: Python Modules",
        "Programming Language :: Python :: 3",
        "Programming Language :: Python :: 3.9",
        "Programming Language :: Python :: 3.10",
        "Programming Language :: Python :: 3.11",
        "Private :: Do Not Upload"
    ]

[tool.poetry.dependencies]
python = "^3.9, <3.12"
iso-639 = {git = "https://github.com/noumar/iso639.git", tag = "0.4.5"}
jinja2 = "^3.0.2"
MarkupSafe = "2.0.1"
pillow = "*"
python-dateutil = "*"
pytube = "*"
requests = "*"
tomlkit = "*"
yt-dlp = "*"

[tool.poetry.group.dev.dependencies]
pytest = "*"
pytest-cov = "*"

[tool.poetry.group.fmt.dependencies]
black = "*"

[tool.poetry.group.docs.dependencies]
mkdocs-material = "*"
mkdocs-htmlproofer-plugin = "*"
mkdocstrings = "*"
mkdocs-gen-files = "*"
mkdocs-literate-nav = "*"

[tool.poetry.group.nox.dependencies]
nox-poetry = "*"

[tool.poetry.group.type-check.dependencies]
mypy = "*"

[tool.poetry.group.lint.dependencies]
ruff = "*"

[tool.poetry.scripts]
studio = "studio.entrypoint:main"

[tool.mypy]
ignore_missing_imports = true
strict = true

[tool.ruff]
line-length = 99
target-version = "py39"
extend-select = [
    "I", # isort
    "N", # pep8-naming
    "UP", # pyupgrade
    "RUF", # ruff
    "B", # flake8-bugbear
    "C4", # flake8-comprehensions
    "PTH", # flake8-use-pathlib
    "SIM", # flake8-simplify
    "TID", # flake8-tidy-imports
]
extend-ignore = ["RUF005"]
src = ["src"]

[tool.ruff.isort]
force-sort-within-sections = true
split-on-trailing-comma = false
# For non-src directory projects, explicitly set top level package names:
# known-first-party = ["my-app"]

[tool.ruff.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.black]
line-length = 99
target-version = ["py39", "py310", "py311"]

[tool.pytest.ini_options]
addopts = [
    "--strict-config",
    "--strict-markers",
]
xfail_strict = true
filterwarnings = [
    "error",
]

[tool.coverage.run]
branch = true


[tool.commitizen]
name = "cz_conventional_commits"
tag_format = "$version"
version_type = "semver"
version_provider = "poetry"
update_changelog_on_bump = true
major_version_zero = true
[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"